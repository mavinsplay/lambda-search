include: 'https://gitlab.com/gitlab-cd/ssh-template/raw/master/ssh.yml'

stages:
  - lint
  - deploy
  - test

flake8-check:
  stage: lint
  image: registry.gitlab.com/pipeline-components/flake8:latest
  script:
    - flake8 --verbose .

black-check:
  stage: lint
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check .

django-tests:
  services:
    - postgres:17
  stage: test
  image: python:3.12
  variables:
    POSTGRES_DB: test_db
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: root
    POSTGRES_HOST: postgres
    DJANGO_POSTGRESQL_NAME: test_db
    DJANGO_POSTGRESQL_USER: postgres
    DJANGO_POSTGRESQL_PASSWORD: root
    DJANGO_POSTGRESQL_HOST: postgres
    DJANGO_POSTGRESQL_PORT: 5432
  script:
    - export DATABASE_URL=postgres://$DJANGO_POSTGRESQL_USER:$DJANGO_POSTGRESQL_PASSWORD@$DJANGO_POSTGRESQL_HOST:$DJANGO_POSTGRESQL_PORT/$DJANGO_POSTGRESQL_NAME
    - apt-get update -qy
    - pip install -r requirements/test.txt
    - cd lambda_search
    - python3 manage.py makemigrations
    - python3 manage.py migrate
    - python3 manage.py test

prod-deploy:
  stage: deploy
  only:
    - main
    - docker
  dependencies:
    - black-check
    - flake8-check
  before_script:
    - apt-get update -qq
    - apt-get install -qq git
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SERVER_USER@$SERVER_HOST "cd ~/team-3 && git reset --hard origin/main && git pull origin main"
